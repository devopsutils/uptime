service:
  name: uptime-app

custom:
  stage: ${opt:stage, self:provider.stage}
  uptime:
    table:
      name: ${self:service}-${self:custom.stage}
      throughput: 5
      deletionPolicy: Retain
    # vpc: vpc-ea6db38c
    # vpce:

frameworkVersion: ">=1.47.0 <2.0.0"

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  stage: dev
  region: us-east-1
  runtime: nodejs10.x
  environment:
    DYNAMODB_TABLE: ${self:custom.uptime.table.name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ DynamoDbTable, Arn ]

functions:

  getServices:
    handler: src/getServices.handler
    events:
      - http:
          method: get
          path: services
          cors: true

  getSettings:
    handler: src/getSettings.handler
    events:
      - http:
          method: get
          path: settings
          cors: true

  putSettings:
    handler: src/putSettings.handler
    events:
      - http:
          method: put
          path: settings
          cors: true

package:
  individually: true

resources:
  - ${file(src/aws/DynamoDbTable.yaml)}
  - ${file(src/aws/S3Bucket.yaml)}
